# Set DOTFILES_DIR for this installation
export DOTFILES_DIR="/home/tafk/dotfiles"

# Modern Zsh Configuration - Power User Setup
# Part of dotfiles - optimized with Oh My Zsh and advanced features

# ==============================================================================
# Performance Optimization - Load Early
# ==============================================================================

# Enable Powerlevel10k instant prompt (must be at top)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# ==============================================================================
# Oh My Zsh Configuration
# ==============================================================================

# Path to oh-my-zsh installation
export ZSH="$HOME/.oh-my-zsh"

# Theme configuration
ZSH_THEME="powerlevel10k/powerlevel10k"

# Powerlevel10k configuration
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs newline prompt_char)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status command_execution_time background_jobs time)
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%F{014}❯%f "
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""

# Oh My Zsh update settings
zstyle ':omz:update' mode reminder
zstyle ':omz:update' frequency 13

# Plugins - Essential power user collection
plugins=(
    # Core functionality
    git
    docker
    docker-compose
    kubectl
    
    # Node.js ecosystem
    npm
    node
    nvm
    
    # Python development
    python
    pip
    
    # System tools
    sudo
    command-not-found
    colored-man-pages
    
    # Navigation and search
    history-substring-search
    
    # Auto-completion and suggestions
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-completions
    
    # Additional utilities
    extract
    web-search
    copypath
    copyfile
)

# ==============================================================================
# Load Oh My Zsh
# ==============================================================================

source $ZSH/oh-my-zsh.sh

# ==============================================================================
# Load Shared Environment
# ==============================================================================

# Source shared environment variables
if [[ -f "$DOTFILES_DIR/scripts/env/common.sh" ]]; then
    source "$DOTFILES_DIR/scripts/env/common.sh"
fi

# Load theme configuration if available
if [[ -f "$HOME/.config/dotfiles/theme.sh" ]]; then
    source "$HOME/.config/dotfiles/theme.sh"
fi

# ==============================================================================
# Zsh-Specific Options and Features
# ==============================================================================

# History configuration - power user settings
HISTFILE=~/.zsh_history
HISTSIZE=50000
SAVEHIST=100000

# History options
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits
setopt SHARE_HISTORY             # Share history between all sessions
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry
setopt HIST_VERIFY               # Don't execute immediately upon history expansion

# Navigation options
setopt AUTO_CD                   # Auto cd when typing directory name
setopt AUTO_PUSHD               # Push the current directory visited on the stack
setopt PUSHD_IGNORE_DUPS        # Do not store duplicates in the stack
setopt PUSHD_SILENT             # Do not print the directory stack after pushd or popd

# Expansion and globbing
setopt EXTENDED_GLOB            # Use extended globbing syntax
setopt GLOB_DOTS               # Include dotfiles in globbing
setopt NO_CASE_GLOB            # Case insensitive globbing
setopt NUMERIC_GLOB_SORT       # Sort filenames numerically when possible

# Completion options
setopt COMPLETE_IN_WORD        # Complete from both ends of a word
setopt ALWAYS_TO_END          # Move cursor to the end of a completed word
setopt PATH_DIRS              # Perform path search even on command names with slashes
setopt AUTO_MENU              # Show completion menu on a successive tab press
setopt AUTO_LIST              # Automatically list choices on ambiguous completion
setopt AUTO_PARAM_SLASH       # If completed parameter is a directory, add a trailing slash
setopt FLOW_CONTROL           # Enable flow control in the shell

# Correction options
setopt CORRECT                # Try to correct the spelling of commands
setopt CORRECT_ALL           # Try to correct the spelling of all arguments in a line

# ==============================================================================
# Advanced Completion System
# ==============================================================================

# Completion styling
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# Completion for modern tools
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# ==============================================================================
# FZF Zsh-Specific Configuration
# ==============================================================================

# FZF zsh integration
if command -v fzf >/dev/null 2>&1; then
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

# ==============================================================================
# Plugin Configuration - Advanced Settings
# ==============================================================================

# Autosuggestions configuration
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#928374,underline"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=true

# Syntax highlighting configuration
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
ZSH_HIGHLIGHT_STYLES[command]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[alias]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[function]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[path]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[globbing]='fg=orange'

# History substring search configuration
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='bg=magenta,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='bg=red,fg=white,bold'
HISTORY_SUBSTRING_SEARCH_GLOBBING_FLAGS='i'

# ==============================================================================
# Aliases and Functions from Scripts
# ==============================================================================

# Aliases and functions are loaded from scripts/aliases/*.sh and scripts/functions/*.sh

# Functions are loaded from scripts/functions/shared.sh

# ==============================================================================
# Key Bindings - Zsh Specific
# ==============================================================================

# Vi mode key bindings
bindkey -v
export KEYTIMEOUT=1

# History search
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward

# Edit command line in vim
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^X^E' edit-command-line

# Better word navigation
bindkey '^[[1;5C' forward-word    # Ctrl+Right
bindkey '^[[1;5D' backward-word   # Ctrl+Left

# ==============================================================================
# Node.js and Development Environment
# ==============================================================================

# Node Version Manager
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# ==============================================================================
# WSL Integration - Enhanced
# ==============================================================================

if [[ "$IS_WSL" == "true" ]]; then
    # WSL-specific aliases and functions
    alias open='explorer.exe'
    alias winget='/mnt/c/Windows/System32/winget.exe'
    alias pwsh='/mnt/c/Program\ Files/PowerShell/7/pwsh.exe'
    
    # Enhanced Windows integration
    wcd() {
        local winpath=$(wslpath -w "$(pwd)")
        echo "$winpath" | clip.exe
        echo "Windows path copied to clipboard: $winpath"
    }
    
    # Windows Explorer in current directory
    explorer() {
        explorer.exe "${1:-.}"
    }
    
    # Display and WSL environment is set in scripts/env/common.sh
fi

# ==============================================================================
# Dotfiles Integration
# ==============================================================================

# Load dotfiles functions and aliases
if [[ -d "$DOTFILES_DIR" ]]; then
    # Load functions
    for file in "$DOTFILES_DIR"/scripts/functions/*.sh; do
        [[ -r "$file" ]] && source "$file"
    done
    
    # Load aliases  
    for file in "$DOTFILES_DIR"/scripts/aliases/*.sh; do
        [[ -r "$file" ]] && source "$file"
    done
fi

# ==============================================================================
# Powerlevel10k Configuration
# ==============================================================================

# Load Powerlevel10k configuration
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ==============================================================================
# Local Configuration and Cleanup
# ==============================================================================

# Source local configuration if it exists (not tracked in git)
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# Completion system finalization
autoload -U compinit && compinit

# Welcome message for interactive shells
if [[ -o interactive ]]; then
    echo "🚀 Zsh ${ZSH_VERSION} with Oh My Zsh loaded"
    if command -v git >/dev/null 2>&1; then
        echo "📦 Git: $(git --version | cut -d' ' -f3)"
    fi
    if [[ -n "$WSL_DISTRO_NAME" ]]; then
        echo "🐧 WSL: $WSL_DISTRO_NAME"
    fi
    if [[ -n "$DOTFILES_THEME" ]]; then
        echo "🎨 Theme: $DOTFILES_THEME"
    fi
fi